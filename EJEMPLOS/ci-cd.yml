name: CI/CD Pipeline

on:
  push:
    branches: [ dev, stg, prod, main ]
  pull-request:
    branches: [ dev, stg, prod, main ]

env:
    DOCKERHUB_USERNAME: "${{ secrets.DOCKER_USERNAME }}"
    REGISTRY: docker.io
    IMAGE_NAME: flaskapp
    DOCKERHUB_TOKEN: "${{ secrets.DOCKER_TOKEN }}"
    NAMESPACE: ${{ github.ref_name }}
    IMAGE_TAG: ${{ github.ref_name }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps: 
      - uses: actions/checkout@v2

      - name: Builder
        uses: docker/setup-build-action@v1

      - name: login en Docker Hub
        uses: docker/login-action@v1
        with:
            username: "${{ secrets.DOCKER_USERNAME }}"
            password: "${{ secrets.DOCKER_TOKEN }}"
      
      #- name: Build & Test
        #run:
          # Ejecutar Test sobre Codigo // LINT

          #docker build -t ${{ env.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:${{ github.sha }} .
       
          # Test

      - name: Build & Push
        uses: docker/build-push-action@v2
        with:
          context:
          file: ./FlaskApp/Dockerfile
          push: true
          tag: ${{ env.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

      - name: Config k8s
        run:
          mkidr -p $HOME/.kube
          minikube kubeconfig > $HOME/.kube/config
        env:
          KUBECONFIG: $HOME/.kube/config

      - name: crear o selecionar namespace
        run:
          kubectl get $NAMESPACE || kubectl create namespace $NAMESPACE
      
      - name: Deploy con kustomize
        run:
          kubectl apply -k overlays/$NAMESPACE/














#      - name: Determinar Environment
#        id: Determinar_env
#        run: |
#            if [[ ${{ github.ref }} == 'refs/heads/main' ]]; then
#            echo "::set-output name=env::prod"
#            elif [[ ${{ github.ref }} == 'refs/heads/staging' ]]; then
#            echo "::set-output name=env::staging"
#            else
#            echo "::set-output name=env::dev"
#            fi
#            
#      - name: Deploy        



            